<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Abseil on Jaehun's Blog</title><link>https://jaehun.me/ko/categories/abseil/</link><description>Recent content in Abseil on Jaehun's Blog</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Tue, 24 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehun.me/ko/categories/abseil/index.xml" rel="self" type="application/rss+xml"/><item><title>Abseil Tip 231 여기와 저기 사이 – 간과되기 쉬운 몇 가지 알고리즘</title><link>https://jaehun.me/ko/ko/posts/2024-12-24-tow231/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-24-tow231/</guid><description>&lt;p>아래는 **&amp;ldquo;이번 주의 팁 #231: 여기와 저기 사이 – 간과되기 쉬운 몇 가지 알고리즘&amp;rdquo;**에 대한 한글 번역입니다.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #231: 여기와 저기 사이 – 간과되기 쉬운 몇 가지 알고리즘&amp;rdquo;&lt;/p></description></item><item><title>Abseil Tip 232 변수 선언 시 auto를 언제 사용할 것인가</title><link>https://jaehun.me/ko/ko/posts/2024-12-24-tow232/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-24-tow232/</guid><description>&lt;p>아래는 **&amp;ldquo;이번 주의 팁 #232: 변수 선언 시 &lt;code>auto&lt;/code>를 언제 사용할 것인가&amp;rdquo;**에 대한 한글 번역입니다.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #232: 변수 선언 시 &lt;code>auto&lt;/code>를 언제 사용할 것인가&amp;rdquo;&lt;/p></description></item><item><title>Abseil Tip 234 값, 포인터, 참조로 전달하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-24-tow234/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-24-tow234/</guid><description>&lt;p>아래는 **&amp;ldquo;이번 주의 팁 #234: 값, 포인터, 참조로 전달하기&amp;rdquo;**에 대한 한글 번역입니다.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #234: 값, 포인터, 참조로 전달하기&amp;rdquo;&lt;/p></description></item><item><title>Abseil Tip 197 Reader Lock은 드물게 사용해야 합니다</title><link>https://jaehun.me/ko/ko/posts/2024-12-18-tow197/</link><pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-18-tow197/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #197: Reader Lock은 드물게 사용해야 합니다&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2021년 7월 29일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2024년 4월 1일&lt;/p>
&lt;p>&lt;strong>작성자:&lt;/strong> &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 224 vector.at() 사용 피하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-18-tow224/</link><pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-18-tow224/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #224: &lt;code>vector.at()&lt;/code> 사용 피하기&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2023년 8월 24일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2024년 1월 24일&lt;/p>
&lt;p>&lt;strong>작성자:&lt;/strong> &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/224">abseil.io/tips/224&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="at">&lt;strong>&lt;code>at()&lt;/code>는 무엇을 하나요?&lt;/strong>&lt;/h2>
&lt;p>&lt;code>at(size_type pos)&lt;/code> 메서드의 동작은 다음과 같이 정의됩니다:&lt;/p></description></item><item><title>Abseil Tip 227 빈 컨테이너와 부호 없는 정수 연산 주의하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-18-tow227/</link><pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-18-tow227/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #227: 빈 컨테이너와 부호 없는 정수 연산 주의하기&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2023년 11월 16일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2024년 3월 11일&lt;/p></description></item><item><title>Abseil Tip 229 템플릿 메타프로그래밍을 위한 순위 기반 오버로드</title><link>https://jaehun.me/ko/ko/posts/2024-12-18-tow229/</link><pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-18-tow229/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #229: 템플릿 메타프로그래밍을 위한 순위 기반 오버로드&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2024년 2월 5일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2024년 2월 20일&lt;/p></description></item><item><title>Abseil Tip 124 absl::StrFormat()</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow124/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow124/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #124: &lt;code>absl::StrFormat()&lt;/code>&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2016년 10월 11일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2022년 11월 16일&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/124">abseil.io/tips/124&lt;/a>&lt;/p>
&lt;hr>
&lt;h2>&lt;strong>&lt;code>str_format&lt;/code> 라이브러리와 &lt;code>absl::StrFormat()&lt;/code>&lt;/strong>&lt;/h2>
&lt;p>오랜 테스트와 개발 과정을 거친 끝에, &lt;code>str_format&lt;/code> 라이브러리를 정식으로 공개하게 되었습니다. &lt;code>str_format&lt;/code> 라이브러리는 매우 효율적이고 타입 안전하며 확장 가능한 라이브러리로, 모든 &lt;code>printf&lt;/code> 형식의 문법을 구현합니다. 거의 모든 &lt;code>printf&lt;/code> 스타일 변환은 손쉽게 &lt;code>absl::StrFormat()&lt;/code>으로 업그레이드할 수 있습니다. 자세한 문서는 &lt;a href="https://abseil.io/docs/cpp/guides/format">여기&lt;/a>에서 확인하세요. 이 라이브러리는 printf 스타일 포맷팅에 가장 적합하지만, 이 글에서는 printf 스타일의 사용 여부에 대한 입장은 따로 표명하지 않습니다.&lt;/p></description></item><item><title>Abseil Tip 18 Substitute를 활용한 문자열 포맷팅</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow18/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow18/</guid><description>&lt;p>물론입니다! 아래는 번역된 내용입니다:&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #18: Substitute를 활용한 문자열 포맷팅&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2012년 10월 4일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2022년 11월 16일&lt;/p></description></item><item><title>Abseil Tip 198 태그 타입(Tag Types)</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow198/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow198/</guid><description>&lt;p>아래는 **&amp;ldquo;이번 주의 팁 #198: 태그 타입(Tag Types)&amp;rdquo;**에 대한 한글 번역입니다.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #198: 태그 타입(Tag Types)&amp;rdquo;&lt;/p></description></item><item><title>Abseil Tip 215 AbslStringify()를 사용한 사용자 정의 타입 문자열화"</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow215/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow215/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #215: &lt;code>AbslStringify()&lt;/code>를 사용한 사용자 정의 타입 문자열화&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2022년 11월 2일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2022년 11월 16일&lt;/p></description></item><item><title>Abseil Tip 218 FTADLE로 확장 지점 설계하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow218/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow218/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #218: FTADLE로 확장 지점 설계하기&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2023년 1월 19일&lt;/p>
&lt;p>&lt;strong>작성자:&lt;/strong> &lt;a href="mailto:asoffer@google.com">Andy Soffer&lt;/a>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/218">abseil.io/tips/218&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="확장-지점-설계하기">&lt;strong>확장 지점 설계하기&lt;/strong>&lt;/h2>
&lt;p>가정해 봅시다. 여러분은 &lt;code>sketchy&lt;/code>라는 라이브러리를 개발 중이고, 이 라이브러리는 캔버스에 그림을 그리는 기능을 제공합니다. 이미 점, 선, 텍스트 같은 기본 도형을 그리는 기능을 제공하지만, 사용자가 자신만의 타입을 그리는 방식을 정의할 수 있도록 **확장 지점(extension point)**을 설계하려고 합니다.&lt;/p></description></item><item><title>Abseil Tip 3 문자열 연결과 operator+ vs. StrCat()</title><link>https://jaehun.me/ko/ko/posts/2024-12-17-tow3/</link><pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-17-tow3/</guid><description>&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #3: 문자열 연결과 &lt;code>operator+&lt;/code> vs. &lt;code>StrCat()&lt;/code>&amp;rdquo;&lt;/p>
&lt;p>&lt;strong>원문 게시일:&lt;/strong> 2012년 5월 11일&lt;br>
&lt;strong>업데이트:&lt;/strong> 2022년 11월 16일&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/3">abseil.io/tips/3&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="개요">&lt;strong>개요&lt;/strong>&lt;/h2>
&lt;p>리뷰어가 &amp;ldquo;문자열 연결 연산자 &lt;code>+&lt;/code>를 사용하지 마세요. 비효율적입니다.&amp;ldquo;라고 말하면 많은 개발자가 의아해합니다. &lt;code>string::operator+&lt;/code>가 왜 비효율적일까요? 이런 간단한 작업에서 실수를 하기 어려울 것 같은데 말이죠.&lt;/p></description></item><item><title>Abseil Tip 186 함수는 무명 네임스페이스에 두는 것을 선호하세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-15-tow186/</link><pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-15-tow186/</guid><description>&lt;p>원문 게시: 2020년 11월 5일, 주간 팁 #186&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:jdennett@google.com">James Dennett&lt;/a>, &lt;a href="mailto:jrennie@google.com">Jason Rennie&lt;/a>&lt;/em>&lt;/p>
&lt;p>최종 수정: 2020-11-05&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/186">abseil.io/tips/186&lt;/a>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;모든 것은 가능한 한 단순해야 하지만, 지나치게 단순해서는 안 된다.&amp;rdquo; - 아인슈타인의 생각을 해석한 로저 세션스&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 187 std::unique_ptr Must Be Moved"</title><link>https://jaehun.me/ko/ko/posts/2024-12-15-tow187/</link><pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-15-tow187/</guid><description>&lt;p>원문 게시: 2020년 11월 5일, 주간 팁 #187&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:asoffer@google.com">Andy Soffer&lt;/a>&lt;/em>&lt;/p>
&lt;p>최종 수정: 2020-11-05&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/187">abseil.io/tips/187&lt;/a>&lt;/p>
&lt;p>&lt;em>“첫 번째 장에 &lt;code>std::unique_ptr&lt;/code>가 벽에 걸려 있다면, 두 번째 또는 세 번째 장에서는 반드시 이동되어야 합니다. 이동하지 않을 거라면 처음부터 거기 있으면 안 됩니다.” ~ 안톤 체호프의 말에 약간의 변형을 가하여&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 188 스마트 포인터를 함수 매개변수로 사용할 때 주의하세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-15-tow188/</link><pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-15-tow188/</guid><description>&lt;p>원문 게시: 2020년 12월 10일, 주간 팁 #188&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:krzysio@google.com">Krzysztof Kosiński&lt;/a>&lt;/em>&lt;/p>
&lt;p>최종 수정: 2020-12-10&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/188">abseil.io/tips/188&lt;/a>&lt;/p>
&lt;h2 id="이-코드의-문제는-무엇일까요">이 코드의 문제는 무엇일까요?&lt;/h2>
&lt;pre class="prettyprint lang-cpp bad-code">
bool CanYouPetTheDog(const std::shared_ptr&amp;lt;Dog&amp;gt;&amp; dog,
 absl::Duration min_delay) {
 return dog-&amp;gt;GetLastPetTime() + min_delay &amp;lt; absl::Now();
}
&lt;/pre>
&lt;p>&lt;code>CanYouPetTheDog&lt;/code> 함수는 &lt;code>dog&lt;/code> 매개변수의 소유권을 변경하지 않습니다. 그럼에도 불구하고, 함수의 시그니처는 &lt;code>dog&lt;/code>가 반드시 &lt;code>std::shared_ptr&lt;/code>에 저장되어야 함을 요구합니다. 이는 함수의 동작에 필요하지 않은 특정 소유권 모델에 대한 불필요한 의존성을 초래합니다. 이러한 의존성은 호출자가 &lt;code>std::unique_ptr&lt;/code>과 같은 다른 소유권 모델을 사용하거나 객체를 스택에 생성하는 것을 방해합니다.&lt;/p></description></item><item><title>Abseil Tip 116 함수 인자에서 참조 사용 시 주의사항</title><link>https://jaehun.me/ko/ko/posts/2024-12-14-tow116/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-14-tow116/</guid><description>&lt;h3 id="tip-of-the-week-116-함수-인자에서-참조-사용-시-주의사항">Tip of the Week #116: 함수 인자에서 참조 사용 시 주의사항&lt;/h3>
&lt;p>작성자: &lt;a href="mailto:pilki@google.com">Alex Pilkiewicz&lt;/a>&lt;br>
최초 작성일: 2016년 5월 26일&lt;br>
업데이트: 2020년 6월 1일&lt;br>
원문 링크: &lt;a href="https://abseil.io/tips/116">abseil.io/tips/116&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>그림에서 이미지로, 이미지에서 텍스트로, 텍스트에서 음성으로, 상상의 포인터가 하나의 고유한 공간을 안정화하려고 시도하며 참조 체계를 가리키고 고정합니다. — 미셸 푸코, 《이것은 파이프가 아니다》&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 165 초기화 구문을 포함한 if와 switch 문 사용하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-14-tow165/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-14-tow165/</guid><description>&lt;h3 id="tip-of-the-week-165-초기화-구문을-포함한-if와-switch-문-사용하기">Tip of the Week #165: 초기화 구문을 포함한 &lt;code>if&lt;/code>와 &lt;code>switch&lt;/code> 문 사용하기&lt;/h3>
&lt;p>작성자: &lt;a href="mailto:tkoeppe@google.com">Thomas Köppe&lt;/a>&lt;br>
최초 작성일: 2019년 8월 17일&lt;br>
업데이트: 2020년 1월 17일&lt;br>
원문 링크: &lt;a href="https://abseil.io/tips/165">abseil.io/tips/165&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 181 StatusOr&lt;T> 값 접근하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-14-tow181/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-14-tow181/</guid><description>&lt;h3 id="tip-of-the-week-181-statusort-값-접근하기">Tip of the Week #181: &lt;code>StatusOr&amp;lt;T&amp;gt;&lt;/code> 값 접근하기&lt;/h3>
&lt;p>작성자: &lt;a href="mailto:msheely@google.com">Michael Sheely&lt;/a>&lt;br>
최초 작성일: 2020년 7월 9일&lt;br>
업데이트: 2020년 9월 2일&lt;br>
원문 링크: &lt;a href="https://abseil.io/tips/181">abseil.io/tips/181&lt;/a>&lt;/p>
&lt;hr>

 &lt;blockquote
 class="border-primary bg-muted/30 hover:bg-muted/40 my-6 rounded-r-lg border-l-4 py-4 pr-4 pl-6 italic transition-all duration-200 ease-out hover:translate-x-1">
 &lt;div class="prose prose-sm max-w-none">
 &lt;p>&lt;code>StatusOr&amp;lt;Readability&amp;gt;&lt;/code>: 선택하지 않아도 됩니다!&lt;/p></description></item><item><title>Abseil Tip 76 absl::Status 사용하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-14-tow76/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-14-tow76/</guid><description>&lt;h3 id="tip-of-the-week-76-abslstatus-사용하기">Tip of the Week #76: &lt;code>absl::Status&lt;/code> 사용하기&lt;/h3>
&lt;p>작성자: &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;br>
최초 작성일: 2014년 5월 4일&lt;br>
업데이트: 2020년 2월 6일&lt;br>
원문 링크: &lt;a href="https://abseil.io/tips/76">abseil.io/tips/76&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="abslstatus를-사용해야-하는-이유와-사용-시-유의점">&lt;code>absl::Status&lt;/code>를 사용해야 하는 이유와 사용 시 유의점&lt;/h3>
&lt;p>&lt;code>absl::Status&lt;/code>를 언제, 어떻게 사용해야 하는지 궁금한 분들을 위해 몇 가지 이유와 고려 사항을 소개합니다.&lt;/p></description></item><item><title>Abseil Tip 140 상수(Constant) 처리 안전한 관용구</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow140/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow140/</guid><description>&lt;h1 id="주간-팁-140-상수constant-처리-안전한-관용구">주간 팁 #140: 상수(Constant) 처리: 안전한 관용구&lt;/h1>
&lt;p>&lt;strong>원래 TotW #140으로 2017년 12월 8일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:gmatta@gmail.com">Matt Armstrong&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020년 5월 6일 업데이트됨&lt;/strong>&lt;/p></description></item><item><title>Abseil Tip 163 std::optional 매개변수 전달하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow163/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow163/</guid><description>&lt;h1 id="주간-팁-163-codestdoptionalcode-매개변수-전달하기">주간 팁 #163: &lt;code>&amp;lt;code&amp;gt;std::optional&amp;lt;/code&amp;gt;&lt;/code> 매개변수 전달하기&lt;/h1>
&lt;p>&lt;strong>원래 TotW #163으로 2019년 7월 11일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:puddles@google.com">Ian Eldred Pudney&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/163">abseil.io/tips/163&lt;/a>&lt;/p>
&lt;p>&lt;em>Null 참조는 정말로 10억 달러의 실수일까요?&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 171 Sentinel 값 피하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow171/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow171/</guid><description>&lt;h1 id="주간-팁-171-sentinel-값-피하기">주간 팁 #171: Sentinel 값 피하기&lt;/h1>
&lt;p>&lt;strong>원래 TotW #171로 2019년 11월 8일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:hwright@google.com">Hyrum Wright&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/171">abseil.io/tips/171&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Sentinel_value">Sentinel 값&lt;/a>은 특정 컨텍스트에서 특별한 의미를 가지는 값입니다. 예를 들어, 다음과 같은 API를 생각해봅시다:&lt;/p></description></item><item><title>Abseil Tip 172 지정 초기화자(Designated Initializers)</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow172/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow172/</guid><description>&lt;h1 id="주간-팁-172-지정-초기화자designated-initializers">주간 팁 #172: 지정 초기화자(Designated Initializers)&lt;/h1>
&lt;p>&lt;strong>원래 TotW #172로 2019년 12월 11일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:jacobsa@google.com">Aaron Jacobs&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/172">abseil.io/tips/172&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers">지정 초기화자&lt;/a>는 구조체의 내용을 간결하면서도 읽기 쉽고 유지보수 가능한 방식으로 지정하기 위한 C++20 표준의 문법입니다. 다음과 같은 반복적인 코드를 작성하는 대신:&lt;/p></description></item><item><title>Abseil Tip 173 옵션 구조체로 인수 래핑하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow173/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow173/</guid><description>&lt;h1 id="주간-팁-173-옵션-구조체로-인수-래핑하기">주간 팁 #173: 옵션 구조체로 인수 래핑하기&lt;/h1>
&lt;p>&lt;strong>원래 TotW #173으로 2019년 12월 19일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:jbandela@google.com">John Bandela&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/173">abseil.io/tips/173&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>상자는 없었고, 가방도 없었어요. 그는 머리가 아플 때까지 고민했어요.&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 175 C++14와 C++17의 리터럴 상수 변경 사항</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow175/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow175/</guid><description>&lt;h1 id="주간-팁-175-c14와-c17의-리터럴-상수-변경-사항">주간 팁 #175: C++14와 C++17의 리터럴 상수 변경 사항&lt;/h1>
&lt;p>&lt;strong>원래 TotW #175으로 2020년 1월 30일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:jdennett@google.com">James Dennett&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/175">abseil.io/tips/175&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 176 출력 매개변수 대신 반환 값을 선호하세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow176/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow176/</guid><description>&lt;h1 id="주간-팁-176-출력-매개변수-대신-반환-값을-선호하세요">주간 팁 #176: 출력 매개변수 대신 반환 값을 선호하세요&lt;/h1>
&lt;p>&lt;strong>원래 TotW #176으로 2020년 3월 12일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:edechamps@google.com">Etienne Dechamps&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/176">abseil.io/tips/176&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="문제">문제&lt;/h2>
&lt;p>다음과 같은 함수를 고려해봅시다:&lt;/p></description></item><item><title>Abseil Tip 177 할당 가능성과 데이터 멤버 타입</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow177/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow177/</guid><description>&lt;h1 id="주간-팁-177-할당-가능성과-데이터-멤버-타입">주간 팁 #177: 할당 가능성과 데이터 멤버 타입&lt;/h1>
&lt;p>&lt;strong>원래 TotW #177로 2020년 4월 6일 게시됨&lt;/strong>&lt;br>
&lt;strong>작성자: &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/strong>&lt;br>
&lt;strong>2020-04-06 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/177">abseil.io/tips/177&lt;/a>&lt;/p>
&lt;hr>
&lt;p>타입을 구현할 때는 먼저 타입 설계에 대해 결정하세요. 구현 세부사항보다 API를 우선시하는 것이 중요합니다. 이를 잘 보여주는 일반적인 예는 타입의 할당 가능성과 데이터 멤버의 한정자 간의 트레이드오프입니다.&lt;/p></description></item><item><title>Abseil Tip 5 사라지는 객체의 함정</title><link>https://jaehun.me/ko/ko/posts/2024-12-12-tow5/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-12-tow5/</guid><description>&lt;h1 id="주간-팁-5-사라지는-객체의-함정">주간 팁 #5: 사라지는 객체의 함정&lt;/h1>
&lt;p>&lt;strong>원래 TotW #5로 2012년 6월 26일 게시됨&lt;/strong>&lt;br>
&lt;strong>2020년 6월 1일 업데이트됨&lt;/strong>&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/5">abseil.io/tips/5&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;무언가를 잃고 나서야 그것의 소중함을 알게 된다.&amp;rdquo;&lt;/em>&lt;br>
&lt;em>- 신데렐라(Cinderella)&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 108 std::bind를 피하세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow108/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow108/</guid><description>&lt;p>&lt;strong>Roman Perepelitsa&lt;/strong> &lt;a href="mailto:roman.perepelitsa@gmail.com">(roman.perepelitsa@gmail.com)&lt;/a> 작성&lt;br>
최초 게시일: 2016년 1월 7일&lt;br>
최종 업데이트: 2020년 8월 19일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/108">abseil.io/tips/108&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="stdbind를-피하세요">&lt;code>std::bind&lt;/code>를 피하세요&lt;/h2>
&lt;p>이 팁에서는 코드 작성 시 &lt;code>std::bind()&lt;/code>를 피해야 하는 이유를 요약합니다.&lt;/p></description></item><item><title>Abseil Tip 132 Avoid Redundant Map Lookups</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow132/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow132/</guid><description>&lt;p>&lt;strong>Matt Kulukundis&lt;/strong> &lt;a href="mailto:kfm@google.com">(kfm@google.com)&lt;/a> 작성&lt;br>
최초 게시일: 2017년 3월 30일&lt;br>
최종 업데이트: 2019년 11월 25일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/132">abseil.io/tips/132&lt;/a>&lt;/p>
&lt;hr>

 &lt;blockquote
 class="border-primary bg-muted/30 hover:bg-muted/40 my-6 rounded-r-lg border-l-4 py-4 pr-4 pl-6 italic transition-all duration-200 ease-out hover:translate-x-1">
 &lt;div class="prose prose-sm max-w-none">
 &lt;p>&lt;strong>&amp;ldquo;이곳이 바로 스나크가 있을 곳이야!&amp;rdquo;&lt;/strong> 선장이 외쳤다.&lt;br>
그는 조심스럽게 그의 승무원들을 상륙시키며,&lt;br>
조수의 꼭대기에 머물며 머리카락을 손가락으로 얽어 쥐고 있었다.&lt;br>&lt;/p></description></item><item><title>Abseil Tip 146 기본 초기화와 값 초기화</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow146/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow146/</guid><description>&lt;p>&lt;strong>Dominic Hamon&lt;/strong> &lt;a href="mailto:dominic@google.com">(dominic@google.com)&lt;/a> 작성&lt;br>
최초 게시일: 2018년 4월 19일&lt;br>
최종 업데이트: 2020년 4월 6일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/146">abseil.io/tips/146&lt;/a>&lt;/p>
&lt;hr>

 &lt;blockquote
 class="border-primary bg-muted/30 hover:bg-muted/40 my-6 rounded-r-lg border-l-4 py-4 pr-4 pl-6 italic transition-all duration-200 ease-out hover:translate-x-1">
 &lt;div class="prose prose-sm max-w-none">
 &lt;p>&lt;em>&amp;ldquo;성공으로 가는 길은 항상 공사 중이다.&amp;rdquo;&lt;/em>&lt;br>
– 릴리 톰린&lt;/p></description></item><item><title>Abseil Tip 161 좋은 지역 변수와 나쁜 지역 변수</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow161/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow161/</guid><description>&lt;p>&lt;strong>James Dennett&lt;/strong> &lt;a href="mailto:jdennett@google.com">(jdennett@google.com)&lt;/a> 작성&lt;br>
최초 게시일: 2019년 4월 16일&lt;br>
최종 업데이트: 2020년 4월 6일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/161">abseil.io/tips/161&lt;/a>&lt;/p>
&lt;hr>

 &lt;blockquote
 class="border-primary bg-muted/30 hover:bg-muted/40 my-6 rounded-r-lg border-l-4 py-4 pr-4 pl-6 italic transition-all duration-200 ease-out hover:translate-x-1">
 &lt;div class="prose prose-sm max-w-none">
 &lt;p>&lt;em>&amp;ldquo;우리는 전역적으로 당황할 수 있지만, 지역적으로 고통받는다.&amp;rdquo;&lt;/em>&lt;br>
– 조너선 프랜즌&lt;/p></description></item><item><title>Abseil Tip 166 복사가 복사가 아닐 때</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow166/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow166/</guid><description>&lt;p>&lt;strong>Richard Smith&lt;/strong> &lt;a href="mailto:richardsmith@google.com">(richardsmith@google.com)&lt;/a> 작성&lt;br>
최초 게시일: 2019년 8월 28일&lt;br>
최종 업데이트: 2020년 4월 6일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/166">abseil.io/tips/166&lt;/a>&lt;/p>
&lt;hr>

 &lt;blockquote
 class="border-primary bg-muted/30 hover:bg-muted/40 my-6 rounded-r-lg border-l-4 py-4 pr-4 pl-6 italic transition-all duration-200 ease-out hover:translate-x-1">
 &lt;div class="prose prose-sm max-w-none">
 &lt;p>&lt;em>&amp;ldquo;필요하지 않은 한 존재를 늘리지 말라.&amp;rdquo;&lt;/em> – 윌리엄 오컴&lt;br>
&lt;em>&amp;ldquo;어디로 가야 할지 모르면 잘못된 길로 갈 가능성이 높다.&amp;rdquo;&lt;/em> – 테리 프래쳇&lt;/p></description></item><item><title>Abseil Tip 168 inline 변수</title><link>https://jaehun.me/ko/ko/posts/2024-12-10-tow168/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-10-tow168/</guid><description>&lt;p>&lt;strong>James Dennett&lt;/strong> &lt;a href="mailto:jdennett@google.com">(jdennett@google.com)&lt;/a> 작성&lt;br>
최초 게시일: 2019년 9월 12일&lt;br>
최종 업데이트: 2020년 4월 6일&lt;/p>
&lt;p>&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/168">abseil.io/tips/168&lt;/a>&lt;/p>
&lt;hr>
&lt;p>C++17의 &lt;code>inline&lt;/code> 변수를 사용하여 헤더 파일에서 문자열 상수를 정의하는 안전한 방법은 다음과 같습니다:&lt;/p></description></item><item><title>Abseil Tip 147 Exhaustive switch 문을 책임감 있게 사용하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-09-tow147/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-09-tow147/</guid><description>&lt;h2 id="주간-팁-147-exhaustive-switch-문을-책임감-있게-사용하기">주간 팁 #147: Exhaustive &lt;code>switch&lt;/code> 문을 책임감 있게 사용하기&lt;/h2>
&lt;p>원래 게시일: 2018년 4월 25일&lt;br>
&lt;em>작성자: &lt;a href="mailto:jnewsome@google.com">Jim Newsome&lt;/a>&lt;/em>&lt;br>
최종 업데이트: 2020년 4월 6일&lt;/p>
&lt;p>&lt;strong>바로가기:&lt;/strong> &lt;a href="https://abseil.io/tips/147">abseil.io/tips/147&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="소개">소개&lt;/h3>
&lt;p>&lt;code>-Werror&lt;/code> 컴파일러 플래그를 사용하면 &lt;code>enum&lt;/code> 타입의 값을 대상으로 하는 &lt;code>switch&lt;/code> 문에 &lt;code>default&lt;/code> 레이블이 없을 경우, 모든 열거자가 &lt;code>case&lt;/code> 문으로 처리되지 않으면 컴파일 오류가 발생합니다. 이를 &lt;em>exhaustive&lt;/em> 또는 &lt;em>defaultless&lt;/em> &lt;code>switch&lt;/code> 문이라고 부르기도 합니다.&lt;/p></description></item><item><title>Abseil Tip 158 Abseil 연관 컨테이너와 contains()</title><link>https://jaehun.me/ko/ko/posts/2024-12-09-tow158/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-09-tow158/</guid><description>&lt;h2 id="주간-팁-158-abseil-연관-컨테이너와-contains">주간 팁 #158: Abseil 연관 컨테이너와 &lt;code>contains()&lt;/code>&lt;/h2>
&lt;p>원래 게시일: 2019년 1월 3일&lt;br>
&lt;em>작성자: &lt;a href="mailto:jdennett@google.com">James Dennett&lt;/a>&lt;/em>&lt;br>
최종 업데이트: 2020년 4월 20일&lt;/p>
&lt;p>&lt;strong>바로가기:&lt;/strong> &lt;a href="https://abseil.io/tips/158">abseil.io/tips/158&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="이-컨테이너에-이-값이-포함되어-있나요">이 컨테이너에 이 값이 포함되어 있나요?&lt;/h3>
&lt;p>C++에서 집합(set)에 특정 값이 포함되어 있는지, 맵(map)에 특정 키가 포함되어 있는지 확인하려면 전통적으로 다음과 같은 다소 장황한 코드를 작성해야 했습니다.&lt;/p></description></item><item><title>Abseil Tip 180 Dangling References(유효하지 않은 참조) 피하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-09-tow180/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-09-tow180/</guid><description>&lt;h2 id="주간-팁-180-dangling-references유효하지-않은-참조-피하기">주간 팁 #180: Dangling References(유효하지 않은 참조) 피하기&lt;/h2>
&lt;p>원래 게시일: 2020년 6월 11일&lt;br>
&lt;em>작성자: &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/em>&lt;br>
최종 업데이트: 2020년 6월 11일&lt;/p>
&lt;p>&lt;strong>바로가기:&lt;/strong> &lt;a href="https://abseil.io/tips/180">abseil.io/tips/180&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="소개">소개&lt;/h3>
&lt;p>C++는 다른 많은 언어와 달리, 유효하지 않은 메모리를 참조하는 것을 방지하는 안전 장치가 부족합니다. 이미 &lt;code>delete&lt;/code>된 객체의 포인터를 역참조하거나 스코프에서 벗어난 객체를 참조할 수 있습니다. 클래스 타입조차도 이러한 위험을 내포하고 있습니다. 특히, &lt;code>view&lt;/code>와 &lt;code>span&lt;/code>이라는 이름을 사용하는 객체는 &amp;ldquo;참조 의미론(reference semantics)을 가지며 dangling(유효하지 않음)이 발생할 수 있음&amp;quot;을 나타냅니다. 이러한 타입은 참조 의미론을 가지며, 항상 포인터가 가리키는 데이터를 소유하지 않는다는 점에서 주의가 필요합니다.&lt;/p></description></item><item><title>Abseil Tip 182 정수형 변수를 초기화하세요!</title><link>https://jaehun.me/ko/ko/posts/2024-12-09-tow182/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-09-tow182/</guid><description>&lt;h2 id="주간-팁-182-정수형-변수를-초기화하세요">주간 팁 #182: 정수형 변수를 초기화하세요!&lt;/h2>
&lt;p>원래 게시일: 2020년 7월 23일&lt;br>
최종 업데이트: 2020년 7월 23일&lt;/p>
&lt;p>&lt;strong>바로가기:&lt;/strong> &lt;a href="https://abseil.io/tips/182">abseil.io/tips/182&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;결정의 순간, 할 수 있는 가장 좋은 일은 옳은 일을 하는 것이고, 그다음으로 좋은 것은 틀린 일을 하는 것이며, 가장 나쁜 것은 아무것도 하지 않는 것이다.&amp;rdquo;&lt;br>
&amp;ndash; 시어도어 루즈벨트&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 103 플래그는 전역 변수입니다</title><link>https://jaehun.me/ko/ko/posts/2024-12-08-tow103/</link><pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-08-tow103/</guid><description>&lt;h3 id="주간-팁-103-플래그는-전역-변수입니다">주간 팁 #103: 플래그는 전역 변수입니다&lt;/h3>
&lt;p>&lt;strong>작성자: &lt;a href="mailto:marmstrong@google.com">Matt Armstrong&lt;/a>&lt;/strong>&lt;/p>
&lt;hr>
&lt;p>&lt;code>.cc&lt;/code> 파일에서 전역 범위로 플래그를 정의하세요. 해당 &lt;code>.h&lt;/code> 파일에서는 최대 한 번만 선언하세요.&lt;/p>
&lt;hr>
&lt;h2 id="왜-헤더-파일에-선언할까요">왜 헤더 파일에 선언할까요?&lt;/h2>
&lt;p>헤더 파일 사용은 대부분 우리에게 자연스러운 습관이지만, 그 이유를 잊었을 수도 있습니다. 헤더 파일을 사용하는 이유는 다음과 같습니다:&lt;/p></description></item><item><title>Abseil Tip 45 플래그를 피하라, 특히 라이브러리 코드에서</title><link>https://jaehun.me/ko/ko/posts/2024-12-08-tow45/</link><pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-08-tow45/</guid><description>&lt;h3 id="주간-팁-45-플래그를-피하라-특히-라이브러리-코드에서">주간 팁 #45: 플래그를 피하라, 특히 라이브러리 코드에서&lt;/h3>
&lt;p>&lt;strong>최초 게시일:&lt;/strong> 2013년 6월 3일&lt;br>
&lt;strong>작성자:&lt;/strong> &lt;a href="mailto:titus@google.com">Titus Winters&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;내 코드의 동작이 전역 변수로 제어되기를 바란다. 이 변수는 코드만으로는 값이 예측되지 않으며, 사용 기록이 불완전하고, 코드를 통해 제거하는 데 큰 어려움이 따른다.&amp;rdquo; — 아무도 그런 말을 하지 않는다.&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 90 Retired Flags(사용 중단된 플래그)</title><link>https://jaehun.me/ko/ko/posts/2024-12-08-tow90/</link><pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-08-tow90/</guid><description>&lt;h2 id="주간-팁-90-retired-flags사용-중단된-플래그">주간 팁 #90: Retired Flags(사용 중단된 플래그)&lt;/h2>
&lt;p>원래 게시일: 2015년 3월 19일&lt;br>
작성자: &lt;a href="mailto:titus@google.com">Titus Winters&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="소개">소개&lt;/h3>
&lt;p>명령줄 플래그(command-line flags)를 잘못 사용하면 플래그를 바이너리 및 프로덕션 서버에서 안전하게 제거하는 것이 어려워집니다. (&lt;a href="https://abseil.io/tips/45">주간 팁 #45&lt;/a>에서 다룬 플래그의 잘못된 사용 사례를 참고하세요.)&lt;/p></description></item><item><title>Abseil Tip 136 Unordered Containers</title><link>https://jaehun.me/ko/ko/posts/2024-12-06-tow136/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-06-tow136/</guid><description>&lt;h3 id="주간-팁-136-unordered-containers">주간 팁 #136: Unordered Containers&lt;/h3>
&lt;p>&lt;em>2017년 6월 23일 처음 게시된 TotW #136을 업데이트한 내용입니다.&lt;/em>&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:kfm@google.com">Matt Kulukundis&lt;/a>&lt;/em>&lt;br>
업데이트: 2020-04-06&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/136">abseil.io/tips/136&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;때로는 정말 좋은 자료를 접했을 때, 그걸 최고의 쇼로 만들고자 스스로에게 기대를 걸게 됩니다. 그냥 평범한 일만 하고 집에 가는 것과는 다르죠.&amp;rdquo;&lt;/em>&lt;br>
– 피터 딩클리지&lt;/p></description></item><item><title>Abseil Tip 144 연관 컨테이너에서의 이종 조회(Heterogeneous Lookup)</title><link>https://jaehun.me/ko/ko/posts/2024-12-06-tow144/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-06-tow144/</guid><description>&lt;h3 id="주간-팁-144-연관-컨테이너에서의-이종-조회heterogeneous-lookup">주간 팁 #144: 연관 컨테이너에서의 이종 조회(Heterogeneous Lookup)&lt;/h3>
&lt;p>&lt;em>2018년 3월 23일 처음 게시된 TotW #144을 업데이트한 내용입니다.&lt;/em>&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:sbenza@google.com">Samuel Benzaquen&lt;/a>&lt;/em>&lt;br>
업데이트: 2020-04-06&lt;/p></description></item><item><title>Abseil Tip 152 AbslHashValue과 함께</title><link>https://jaehun.me/ko/ko/posts/2024-12-06-tow152/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-06-tow152/</guid><description>&lt;hr>
&lt;h2 id="order-152">title: &amp;ldquo;주간 팁 #152: &lt;code>AbslHashValue&lt;/code>과 함께&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/152
type: markdown
order: &amp;ldquo;152&amp;rdquo;&lt;/h2>
&lt;p>원래 2018년 6월 21일에 TotW #152로 게시됨&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:kfm@google.com">Matt Kulukundis&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 153 using-directives를 사용하지 마세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-06-tow153/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-06-tow153/</guid><description>&lt;hr>
&lt;h2 id="order-153">title: &amp;ldquo;주간 팁 #153: &lt;code>using-directives&lt;/code>를 사용하지 마세요&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/153
type: markdown
order: &amp;ldquo;153&amp;rdquo;&lt;/h2>
&lt;p>원래 2018년 7월 17일에 TotW #153으로 게시됨&lt;/p></description></item><item><title>Abseil Tip 117 복사 생략과 값으로 전달하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-05-tow117/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-05-tow117/</guid><description>&lt;p>원래 TotW #117로 2016년 6월 8일 게시됨&lt;/p>
&lt;p>&lt;em>작성: Geoff Romer &lt;a href="mailto:gromer@gmail.com">(gromer@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;모든 것이 멀리 있다. 복사의 복사의 복사. 불면증 거리 속의 모든 것, 당신은 어떤 것도 만질 수 없고, 아무것도 당신을 만질 수 없다.&amp;rdquo; — 척 팔라니uk&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 148 Overload Sets</title><link>https://jaehun.me/ko/ko/posts/2024-12-05-tow148/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-05-tow148/</guid><description>&lt;p>원래 TotW #148로 2018년 5월 3일 게시됨&lt;/p>
&lt;p>&lt;em>작성: &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/em>&lt;/p>
&lt;p>업데이트: 2020-04-06&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;전기 정보를 가지고 사는 것의 한 가지 효과는 정보 과부하 상태에서 항상 살아가는 것입니다. 항상 감당할 수 있는 것보다 많은 정보가 존재합니다.&amp;rdquo; — 마셜 맥루언&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 149 Object Lifetimes vs = delete</title><link>https://jaehun.me/ko/ko/posts/2024-12-05-tow149/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-05-tow149/</guid><description>&lt;h2 id="order-149">title: &amp;ldquo;이번 주의 팁 #149: 객체 수명 vs. &lt;code>= delete&lt;/code>&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/149
type: markdown
order: &amp;ldquo;149&amp;rdquo;&lt;/h2>
&lt;p>원래 TotW #149로 2018년 5월 3일 게시됨&lt;/p>
&lt;p>&lt;em>작성: &lt;a href="mailto:titus@cs.ucr.edu">Titus Winters&lt;/a>&lt;/em>&lt;/p>
&lt;p>업데이트: 2020-04-06&lt;/p>
&lt;hr>
&lt;p>&lt;em>&amp;ldquo;다시 파란 속으로, 돈이 사라진 후에&lt;br/> 인생에 한 번, 지하로 흐르는 물처럼&amp;rdquo; — 데이비드 번&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 24 복사, 축약</title><link>https://jaehun.me/ko/ko/posts/2024-12-05-tow24/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-05-tow24/</guid><description>&lt;h2 id="order-024">title: &amp;ldquo;이번 주의 팁 #24: 복사, 축약&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/24
type: markdown
order: &amp;ldquo;024&amp;rdquo;&lt;/h2>
&lt;p>원래 TotW #24로 2012년 11월 26일 게시됨&lt;/p>
&lt;p>&lt;em>작성: Titus Winters &lt;a href="mailto:titus@gmail.com">(titus@google.com)&lt;/a> 및 Chandler Carruth &lt;a href="mailto:chandlerc@google.com">(chandlerc@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;다른 사람을 따라 하는 것은 필요하지만, 자신을 따라 하는 것은 비참하다.&amp;rdquo; - 파블로 피카소&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 11 반환 정책</title><link>https://jaehun.me/ko/ko/posts/2024-12-04-tow11/</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-04-tow11/</guid><description>&lt;h2 id="주간-팁-11-반환-정책">주간 팁 #11: 반환 정책&lt;/h2>
&lt;p>원래 게시일: 2012년 8월 16일&lt;/p>
&lt;p>&lt;em>작성자: Paul S. R. Chisholm &lt;a href="mailto:p.s.r.chisholm@gmail.com">(p.s.r.chisholm@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>&lt;em>Frodo: 돌아오는 여정에는 남은 것이 없을 거야.&lt;/em>&lt;br>
&lt;em>Sam: 돌아오는 여정은 없을 거예요, 미스터 프로도.&lt;/em>&lt;br>
– &lt;em>반지의 제왕: 왕의 귀환&lt;/em> (J.R.R. 톨킨 원작, 프란 월시, 필리파 보이엔스, 피터 잭슨 각본)&lt;/p></description></item><item><title>Abseil Tip 120 반환 값은 건드리지 마세요</title><link>https://jaehun.me/ko/ko/posts/2024-12-04-tow120/</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-04-tow120/</guid><description>&lt;h2 id="주간-팁-120-반환-값은-건드리지-마세요">주간 팁 #120: 반환 값은 건드리지 마세요&lt;/h2>
&lt;p>원래 게시일: 2012년 8월 16일&lt;/p>
&lt;p>&lt;em>작성자: Samuel Benzaquen, &lt;a href="mailto:sbenza@gmail.com">(sbenza@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>다음과 같은 코드 조각이 있다고 가정해 봅시다. 이 코드는 RAII 클린업 함수에 의존하고 있으며, 예상대로 작동하는 것처럼 보입니다:&lt;/p></description></item><item><title>Abseil Tip 143 C++11 삭제된 함수 (= delete)</title><link>https://jaehun.me/ko/ko/posts/2024-12-04-tow143/</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-04-tow143/</guid><description>&lt;h2 id="주간-팁-143-c11-삭제된-함수--delete">주간 팁 #143: C++11 삭제된 함수 (&lt;code>= delete&lt;/code>)&lt;/h2>
&lt;p>원래 게시일: 2018년 3월 2일&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:mosescu@google.com">레오나르드 모세스쿠&lt;/a>&lt;/em>&lt;/p>
&lt;p>업데이트: 2020-04-06&lt;/p>
&lt;p>퀵 링크: &lt;a href="https://abseil.io/tips/143">abseil.io/tips/143&lt;/a>&lt;/p>
&lt;h3 id="소개">소개&lt;/h3>
&lt;p>인터페이스는 일반적으로 호출할 수 있는 연산의 집합을 정의합니다. 그러나 때때로 우리는 반대로 &lt;em>사용하지 말아야 할&lt;/em> 연산 집합을 명시적으로 정의하고 싶을 때가 있습니다. 예를 들어, 복사 생성자와 복사 대입 연산자를 비활성화하는 것은 특정 타입에 대한 복사 동작을 제한하는 일반적인 방법입니다.&lt;/p></description></item><item><title>Abseil Tip 134 make_unique와 private 생성자</title><link>https://jaehun.me/ko/ko/posts/2024-12-03-tow134/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-03-tow134/</guid><description>&lt;h3 id="주간-팁-134-make_unique와-private-생성자">주간 팁 #134: &lt;code>make_unique&lt;/code>와 &lt;code>private&lt;/code> 생성자&lt;/h3>
&lt;hr>
&lt;p>&lt;strong>원래 게시일&lt;/strong>: 2017년 5월 10일 (TotW #134)&lt;br>
&lt;strong>작성자&lt;/strong>: Yitzhak Mandelbaum, Google 엔지니어&lt;br>
&lt;strong>최종 업데이트&lt;/strong>: 2020년 4월 6일&lt;br>
&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/134">abseil.io/tips/134&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 141 bool로의 암시적 변환에 주의하라</title><link>https://jaehun.me/ko/ko/posts/2024-12-03-tow141/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-03-tow141/</guid><description>&lt;h3 id="주간-팁-141-bool로의-암시적-변환에-주의하라">주간 팁 #141: &lt;code>bool&lt;/code>로의 암시적 변환에 주의하라&lt;/h3>
&lt;hr>
&lt;p>&lt;strong>원래 게시일&lt;/strong>: 2018년 1월 19일 (TotW #141)&lt;br>
&lt;strong>작성자&lt;/strong>: &lt;a href="mailto:sfreilich@google.com">Samuel Freilich&lt;/a>&lt;br>
&lt;strong>최종 업데이트&lt;/strong>: 2020년 4월 6일&lt;br>
&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/141">abseil.io/tips/141&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="두-가지-널-포인터-검사-방법">두 가지 널 포인터 검사 방법&lt;/h2>
&lt;p>널 포인터를 역참조하기 전에 검사는 충돌과 버그를 방지하기 위해 중요합니다. 이 검사는 두 가지 방법으로 수행할 수 있습니다:&lt;/p></description></item><item><title>Abseil Tip 61 기본 멤버 초기화 (Default Member Initializers)</title><link>https://jaehun.me/ko/ko/posts/2024-12-03-tow61/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-03-tow61/</guid><description>&lt;hr>
&lt;h3 id="주간-팁-61-기본-멤버-초기화-default-member-initializers">주간 팁 #61: 기본 멤버 초기화 (Default Member Initializers)&lt;/h3>
&lt;hr>
&lt;p>&lt;strong>원래 게시일&lt;/strong>: 2013년 11월 12일 (TotW #61)&lt;br>
&lt;strong>작성자&lt;/strong>: Michael Chastain &lt;a href="mailto:mec.desktop@gmail.com">(mec.desktop@gmail.com)&lt;/a>&lt;br>
&lt;strong>최종 업데이트&lt;/strong>: 2016년 10월&lt;/p>
&lt;hr>
&lt;h2 id="기본-멤버-초기화-선언하기">기본 멤버 초기화 선언하기&lt;/h2>
&lt;p>기본 멤버 초기화는 생성 시 멤버의 기본 값을 선언하며, 다음과 같은 형태로 작성됩니다:&lt;/p></description></item><item><title>Abseil Tip 93 absl::Span 사용하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-03-tow93/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-03-tow93/</guid><description>&lt;hr>
&lt;h3 id="주간-팁-93-abslspan-사용하기">주간 팁 #93: &lt;code>absl::Span&lt;/code> 사용하기&lt;/h3>
&lt;hr>
&lt;p>&lt;strong>원래 게시일&lt;/strong>: 2015년 4월 23일 (TotW #93)&lt;br>
&lt;strong>작성자&lt;/strong>: &lt;a href="mailto:sbenza@google.com">Samuel Benzaquen&lt;/a>&lt;br>
&lt;strong>최종 업데이트&lt;/strong>: 2023년 5월 8일&lt;br>
&lt;strong>빠른 링크&lt;/strong>: &lt;a href="https://abseil.io/tips/93">abseil.io/tips/93&lt;/a>&lt;/p>
&lt;hr>
&lt;p>Google에서는 소유하지 않은 문자열을 처리할 때 &lt;code>string_view&lt;/code>를 함수 매개변수와 반환 타입으로 사용하는 것이 일반적입니다.&lt;br>
이렇게 하면 API가 더 유연해지고, &lt;code>string&lt;/code>으로 불필요한 변환을 피함으로써 성능이 개선될 수 있습니다. (&lt;a href="https://jaehun.me/tips/1">팁 #1&lt;/a> 참조)&lt;/p></description></item><item><title>Abseil Tip 142 다중 매개변수 생성자와 explicit</title><link>https://jaehun.me/ko/ko/posts/2024-12-02-tow142/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-02-tow142/</guid><description>&lt;hr>
&lt;h2 id="order-142">title: &amp;ldquo;Tip of the Week #142: 다중 매개변수 생성자와 &lt;code>explicit&lt;/code>&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/142
type: markdown
order: &amp;ldquo;142&amp;rdquo;&lt;/h2>
&lt;p>처음 게시: 2018-01-29 (TotW #142)&lt;/p>
&lt;p>&lt;em>작성자: &lt;a href="mailto:jdennett@google.com">James Dennett&lt;/a>&lt;/em>&lt;/p>
&lt;p>업데이트: 2020-04-06&lt;/p>
&lt;p>바로가기: &lt;a href="https://abseil.io/tips/142">abseil.io/tips/142&lt;/a>&lt;/p>
&lt;p>“명시적(explicit)이 암시적(implicit)보다 낫다.” &amp;ndash;&lt;br>
&lt;a href="https://www.python.org/dev/peps/pep-0020/">PEP 20&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 59 튜플 연결하기</title><link>https://jaehun.me/ko/ko/posts/2024-12-02-tow59/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-02-tow59/</guid><description>&lt;hr>
&lt;h2 id="order-059">title: &amp;ldquo;Tip of the Week #59: 튜플 연결하기&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/59
type: markdown
order: &amp;ldquo;059&amp;rdquo;&lt;/h2>
&lt;p>처음 게시: 2013-10-21 (totw/59)&lt;/p>
&lt;p>&lt;em>작성자: Greg Miller &lt;a href="mailto:jgm@google.com">(jgm@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>업데이트: 2018-01-24&lt;/p>
&lt;p>&lt;em>&amp;ldquo;이제 손을 맞잡고, 마음도 함께 나누십시오.&amp;rdquo; &amp;ndash;헨리 6세, 윌리엄 셰익스피어&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 88 초기화 방법 =, (), 그리고 {}</title><link>https://jaehun.me/ko/ko/posts/2024-12-02-tow88/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-12-02-tow88/</guid><description>&lt;h2 id="order-088">title: &amp;ldquo;Tip of the Week #88: 초기화 방법: =, (), 그리고 {}&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/88
type: markdown
order: &amp;ldquo;088&amp;rdquo;&lt;/h2>
&lt;p>처음 게시: 2015-01-27 (TotW #88)&lt;/p>
&lt;p>&lt;em>작성자: Titus Winters &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>, Google C++ 스타일 심사 위원회를 대표하여&lt;/em>&lt;/p>
&lt;p>C++11은 &amp;ldquo;통일된 초기화 문법&amp;quot;이라고 불리는 새로운 문법을 도입했습니다. 이는 다양한 초기화 스타일을 통합하고, &lt;a href="http://en.wikipedia.org/wiki/Most_vexing_parse">가장 성가신 구문 분석 문제(Most Vexing Parse)&lt;/a>를 피하며, 협소 변환(narrowing conversion)을 방지하기 위해 설계되었습니다. 하지만 이 새로운 메커니즘은 또 다른 초기화 문법을 추가했을 뿐이며, 이 역시 고유한 장단점을 가지고 있습니다.&lt;/p></description></item><item><title>Abseil Tip 10 문자열 분리, 골치 아프지 않게</title><link>https://jaehun.me/ko/ko/posts/2024-11-29-tow10/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-29-tow10/</guid><description>&lt;hr>
&lt;h2 id="order-010">title: &amp;ldquo;이번 주의 팁 #10: 문자열 분리, 골치 아프지 않게!&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/10
type: markdown
order: &amp;ldquo;010&amp;rdquo;&lt;/h2>
&lt;p>원래 2012-08-16에 totw/10으로 게시됨&lt;/p></description></item><item><title>Abseil Tip 3 문자열 연결과 operator+ vs. StrCat()</title><link>https://jaehun.me/ko/ko/posts/2024-11-29-tow3/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-29-tow3/</guid><description>&lt;hr>
&lt;h2 id="order-003">title: &amp;ldquo;이번 주의 팁 #3: 문자열 연결과 operator+ vs. StrCat()&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/3
type: markdown
order: &amp;ldquo;003&amp;rdquo;&lt;/h2>
&lt;p>원래 2012-05-11에 totw/3으로 게시됨&lt;/p>
&lt;p>2017-09-18 업데이트; 2018-01-22 수정&lt;/p>
&lt;p>리뷰어가 &amp;ldquo;문자열 연결 연산자를 사용하지 마세요, 비효율적이에요&amp;quot;라고 말했을 때 종종 사용자들은 놀라곤 합니다. &lt;code>std::string::operator+&lt;/code>가 비효율적이라니요? 그렇게 구현하기 어렵기라도 한 걸까요?&lt;/p></description></item><item><title>Abseil Tip 36 새로운 Join API</title><link>https://jaehun.me/ko/ko/posts/2024-11-29-tow36/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-29-tow36/</guid><description>&lt;hr>
&lt;h2 id="order-131">title: &amp;ldquo;주간 팁 #131: 특별 멤버 함수와 &lt;code>= default&lt;/code>&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/131
type: markdown
order: &amp;ldquo;131&amp;rdquo;&lt;/h2>
&lt;p>원래 2017-03-24에 totw/131로 게시됨&lt;/p>
&lt;p>작성자: James Dennett &lt;a href="mailto:jdennett@google.com">(jdennett@google.com)&lt;/a>&lt;/p>
&lt;p>C++는 초기부터 &lt;em>특별 멤버 함수&lt;/em>라 불리는 몇 가지 기능을 지원했습니다: 기본 생성자, 소멸자, 복사 생성자 및 복사 할당 연산자입니다. C++11은 여기에 이동 생성자와 이동 할당 연산자를 추가하고, &lt;code>=default&lt;/code>와 &lt;code>=delete&lt;/code>라는 문법을 통해 이러한 기본값을 선언 및 정의하는 시점을 제어할 수 있게 했습니다.&lt;/p></description></item><item><title>Abseil Tip 131 Special 멤버 함수와 = default</title><link>https://jaehun.me/ko/ko/posts/2024-11-28-tow131/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-28-tow131/</guid><description>&lt;hr>
&lt;h2 id="order-131">title: &amp;ldquo;주간 팁 #131: 특별 멤버 함수와 &lt;code>= default&lt;/code>&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/131
type: markdown
order: &amp;ldquo;131&amp;rdquo;&lt;/h2>
&lt;p>원래 2017-03-24에 totw/131로 게시됨&lt;/p>
&lt;p>작성자: James Dennett &lt;a href="mailto:jdennett@google.com">(jdennett@google.com)&lt;/a>&lt;/p>
&lt;p>C++는 초기부터 &lt;em>특별 멤버 함수&lt;/em>라 불리는 몇 가지 기능을 지원했습니다: 기본 생성자, 소멸자, 복사 생성자 및 복사 할당 연산자입니다. C++11은 여기에 이동 생성자와 이동 할당 연산자를 추가하고, &lt;code>=default&lt;/code>와 &lt;code>=delete&lt;/code>라는 문법을 통해 이러한 기본값을 선언 및 정의하는 시점을 제어할 수 있게 했습니다.&lt;/p></description></item><item><title>Abseil Tip 42 초기화 메서드보다 팩토리 함수를 선호하세요</title><link>https://jaehun.me/ko/ko/posts/2024-11-28-tow42/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-28-tow42/</guid><description>&lt;hr>
&lt;h2 id="order-042">title: &amp;ldquo;주간 팁 #42: 초기화 메서드보다 팩토리 함수를 선호하세요&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/42
type: markdown
order: &amp;ldquo;042&amp;rdquo;&lt;/h2>
&lt;p>원래 2013-05-10에 totw/42로 게시됨&lt;br>
작성자: Geoffrey Romer &lt;a href="mailto:gromer@google.com">(gromer@google.com)&lt;/a>&lt;br>
2017-12-21 개정&lt;/p></description></item><item><title>Abseil Tip 74 위임 생성자와 상속 생성자</title><link>https://jaehun.me/ko/ko/posts/2024-11-28-tow74/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-28-tow74/</guid><description>&lt;p>원래 2014-04-21에 totw/74로 게시됨&lt;br>
작성자: Bradley White &lt;a href="mailto:bww@google.com">(bww@google.com)&lt;/a>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;위임 작업이 효과를 발휘하려면, 위임하는 사람도 함께 일해야 합니다.&amp;rdquo; &amp;ndash; 로버트 하프&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 119 using 선언과 네임스페이스 별칭 사용하기</title><link>https://jaehun.me/ko/ko/posts/2024-11-26-tow119/</link><pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-26-tow119/</guid><description>&lt;h3 id="주간-팁-119-using-선언과-네임스페이스-별칭-사용하기">주간 팁 #119: &lt;code>using&lt;/code> 선언과 네임스페이스 별칭 사용하기&lt;/h3>
&lt;p>원래 게시일: 2016-07-14&lt;br>
작성자: Thomas Köppe &lt;a href="mailto:tkoeppe@google.com">(tkoeppe@google.com)&lt;/a>&lt;/p>
&lt;p>이 팁은 &lt;code>.cc&lt;/code> 파일에서 &lt;code>using&lt;/code> 선언과 네임스페이스 별칭을 작성할 때 발생할 수 있는 미묘한 문제를 피하기 위한 간단하고 견고한 방법을 제공합니다.&lt;/p></description></item><item><title>Abseil Tip 123 absl::optional과 std::unique_ptr</title><link>https://jaehun.me/ko/ko/posts/2024-11-26-tow123/</link><pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-26-tow123/</guid><description>&lt;h3 id="주간-팁-123-absloptional과-stdunique_ptr">주간 팁 #123: &lt;code>absl::optional&lt;/code>과 &lt;code>std::unique_ptr&lt;/code>&lt;/h3>
&lt;p>원래 게시일: 2016-09-06&lt;br>
작성자: Alexey Sokolov &lt;a href="mailto:sokolov@google.com">(sokolov@google.com)&lt;/a>&lt;br>
Etienne Dechamps &lt;a href="mailto:edechamps@google.com">(edechamps@google.com)&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="값을-저장하는-방법">값을 저장하는 방법&lt;/h2>
&lt;p>이 팁에서는 값을 저장하는 여러 가지 방법을 다룹니다. 여기서는 클래스 멤버 변수를 예로 들지만, 아래의 많은 점은 지역 변수에도 적용됩니다.&lt;/p></description></item><item><title>Abseil Tip 130 네임스페이스 이름 지정</title><link>https://jaehun.me/ko/ko/posts/2024-11-26-tow130/</link><pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-26-tow130/</guid><description>&lt;h3 id="주간-팁-130-네임스페이스-이름-지정">주간 팁 #130: 네임스페이스 이름 지정&lt;/h3>
&lt;p>원래 게시일: 2017-02-17&lt;br>
작성자: Titus Winters &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>&lt;/p>
&lt;p>&lt;em>정확한 이름 지정은 보는 이의 독창성을 제한한다.&lt;/em>&lt;br>
— 피에르 보나르(Pierre Bonnard)&lt;/p>
&lt;p>Google C++ 스타일 가이드 초기에는 네임스페이스 이름 지정에 대한 지침이 포함되어 있었습니다. 이 지침은 일반적으로 다음과 같이 요약될 수 있습니다:&lt;/p></description></item><item><title>Abseil Tip 109 함수 선언에서 의미 있는 const 사용</title><link>https://jaehun.me/ko/ko/posts/2024-11-25-tow109/</link><pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-25-tow109/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h3 id="tip-of-the-week-109-함수-선언에서-의미-있는">&lt;strong>Tip of the Week #109: 함수 선언에서 의미 있는 &lt;code>const&lt;/code> 사용&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>Greg Miller&lt;/strong> &lt;a href="mailto:jgm@google.com">(jgm@google.com)&lt;/a>&lt;br>
&lt;strong>2016-01-14&lt;/strong>에 totw/109로 최초 게시&lt;/p>
&lt;p>이 문서는 함수 선언에서 &lt;code>const&lt;/code>가 언제 의미가 있고, 언제 의미가 없어 생략하는 것이 최선인지 설명합니다. 먼저, *선언(declaration)*과 *정의(definition)*의 차이를 간단히 살펴보겠습니다.&lt;/p></description></item><item><title>Abseil Tip 126 make_unique는 새로운 new입니다</title><link>https://jaehun.me/ko/ko/posts/2024-11-25-tow126/</link><pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-25-tow126/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h3 id="tip-of-the-week-126">&lt;strong>Tip of the Week #126: &lt;code>make_unique&lt;/code>는 새로운 &lt;code>new&lt;/code>입니다&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>By James Dennett&lt;/strong> &lt;a href="mailto:jdennett@google.com">(jdennett@google.com)&lt;/a>,&lt;br>
&lt;strong>Titus Winters&lt;/strong> &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>의 메일링 리스트 게시글을 기반으로 작성&lt;br>
&lt;strong>2016-12-12&lt;/strong>에 totw/126으로 최초 게시&lt;/p></description></item><item><title>Abseil Tip 99 비멤버 인터페이스 에티켓</title><link>https://jaehun.me/ko/ko/posts/2024-11-25-tow99/</link><pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-25-tow99/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h3 id="tip-of-the-week-99-비멤버-인터페이스-에티켓">&lt;strong>Tip of the Week #99: 비멤버 인터페이스 에티켓&lt;/strong>&lt;/h3>
&lt;p>&lt;strong>2015-06-24&lt;/strong>에 totw/99로 최초 게시&lt;br>
&lt;strong>2017-10-10&lt;/strong> 수정됨&lt;/p>
&lt;p>C++ 클래스의 인터페이스는 클래스 멤버나 정의로만 제한되지 않습니다. API를 평가할 때, 클래스 본문 외부에서 정의된 내용도 클래스의 public 멤버만큼이나 인터페이스의 일부가 될 수 있습니다.&lt;/p></description></item><item><title>Abseil Tip 112 emplace vs. push_back</title><link>https://jaehun.me/ko/ko/posts/2024-11-20-tow112/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-20-tow112/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h2 id="order-112">title: &amp;ldquo;Tip of the Week #112: emplace vs. push_back&amp;rdquo;&lt;br>
layout: tips&lt;br>
sidenav: side-nav-tips.html&lt;br>
published: true&lt;br>
permalink: tips/112&lt;br>
type: markdown&lt;br>
order: &amp;ldquo;112&amp;rdquo;&lt;/h2>
&lt;p>원래 게시 날짜: 2016-02-25, totw/112&lt;br>
작성자: Geoff Romer &lt;a href="mailto:gromer@google.com">(gromer@google.com)&lt;/a>&lt;br>
개정일: 2017-08-30&lt;/p>
&lt;p>&lt;em>&amp;ldquo;우리가 힘을 덜 사용할수록, 우리의 힘은 더 커질 것이다.&amp;rdquo; — 토머스 제퍼슨&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 49 인자 기반 탐색</title><link>https://jaehun.me/ko/ko/posts/2024-11-20-tow49/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-20-tow49/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h2 id="order-049">title: &amp;ldquo;Tip of the Week #49: Argument-Dependent Lookup&amp;rdquo;&lt;br>
layout: tips&lt;br>
sidenav: side-nav-tips.html&lt;br>
published: true&lt;br>
permalink: tips/49&lt;br>
type: markdown&lt;br>
order: &amp;ldquo;049&amp;rdquo;&lt;/h2>
&lt;p>원래 게시 날짜: 2013-07-14, totw/49&lt;/p>
&lt;p>&lt;em>&amp;quot;&amp;hellip;어떤 법적 용어의 흔적을 따르든 간에 사라져버린 그것&amp;hellip;&amp;quot;&lt;br>
– 안토닌 스칼리아, &lt;a href="http://www.supremecourt.gov/opinions/12pdf/12-307_6j37.pdf">미국 대 Windsor 반대 의견&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 65 제자리에 넣기</title><link>https://jaehun.me/ko/ko/posts/2024-11-20-tow65/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-20-tow65/</guid><description>&lt;h3 id="한글-번역">한글 번역&lt;/h3>
&lt;hr>
&lt;h2 id="order-065">title: &amp;ldquo;Tip of the Week #65: 제자리에 요소 넣기(Putting Things in their Place)&amp;rdquo;&lt;br>
layout: tips&lt;br>
sidenav: side-nav-tips.html&lt;br>
published: true&lt;br>
permalink: tips/65&lt;br>
type: markdown&lt;br>
order: &amp;ldquo;065&amp;rdquo;&lt;/h2>
&lt;p>원래 게시 날짜: 2013-12-12, totw/65&lt;br>
작성자: Hyrum Wright &lt;a href="mailto:hyrum@hyrumwright.org">(hyrum@hyrumwright.org)&lt;/a>&lt;/p>
&lt;p>&lt;em>&amp;ldquo;설명하죠. 아니요, 너무 길어요. 요약하겠습니다.&amp;rdquo; — 이니고 몬토야&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 101 반환 값, 참조 및 수명</title><link>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow101/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow101/</guid><description>&lt;h1 id="주간-팁-101-반환-값-참조-및-수명">주간 팁 #101: 반환 값, 참조 및 수명&lt;/h1>
&lt;p>&lt;strong>Originally posted as totw/101 on 2015-07-29&lt;/strong>&lt;br>
By Titus Winters (&lt;a href="mailto:titus@google.com">titus@google.com&lt;/a>)&lt;/p>
&lt;p>다음의 코드 스니펫을 보겠습니다:&lt;/p>
&lt;div
 class="code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md">
 
 &lt;div
 class="code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3">
 
 &lt;div class="flex items-center gap-2">
 &lt;div class="text-muted-foreground flex-shrink-0">
 
 &lt;svg class="h-4 w-4"
 fill="none"
 stroke="currentColor"
 viewBox="0 0 24 24">&lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
&lt;/svg>
 &lt;/div>
 &lt;span class="text-muted-foreground text-sm font-medium">
 C&amp;#43;&amp;#43;
 &lt;/span>
 &lt;/div>

 
 &lt;div class="flex items-center gap-2">
 &lt;button
 class="collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none"
 data-code-id="code-0"
 data-default-state="expanded"
 data-collapsed="false"
 data-auto-collapse-lines="30"
 data-auto-collapse-height="400"
 data-collapsed-height="120"
 title="접기"
 aria-label="접기">
 &lt;span class="collapse-icon">
 
 &lt;svg class="h-3 w-3"
 fill="none"
 stroke="currentColor"
 viewBox="0 0 24 24">&lt;path fill="currentColor" d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z"/>&lt;/svg>
 &lt;/span>
 &lt;span class="collapse-text hidden sm:inline"
 >접기&lt;/span
 >
 &lt;/button>
 &lt;button
 class="copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none"
 data-code-id="code-0"
 title="복사"
 aria-label="복사">
 &lt;span class="copy-icon">
 
 &lt;svg class="h-3 w-3"
 fill="none"
 stroke="currentColor"
 viewBox="0 0 24 24">&lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
&lt;/svg>
 &lt;/span>
 &lt;span class="copy-text hidden sm:inline"
 >복사&lt;/span
 >
 &lt;/button>
 &lt;/div>
 &lt;/div>

 
 &lt;div class="code-block-content relative" id="code-0">
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetName&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">unique_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Consumer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">consumer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="n">Consumer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 
 &lt;div
 class="collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300">
 &lt;div
 class="text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200">
 클릭하여 더 보기
 &lt;/div>
 &lt;/div>
 &lt;/div>
&lt;/div>


&lt;script>
(function() {
 const codeId = 'code-0';
 const copyBtn = document.querySelector('.copy-code-btn[data-code-id="' + codeId + '"]');
 const collapseBtn = document.querySelector('.collapse-code-btn[data-code-id="' + codeId + '"]');
 const codeContainer = document.getElementById(codeId);

 if (!codeContainer) return;

 
 if (copyBtn) {
 const copyIcon = copyBtn.querySelector('.copy-icon');
 const copyText = copyBtn.querySelector('.copy-text');

 copyBtn.addEventListener('click', async function() {
 try {
 
 let codeText = '';

 
 const codeTableCell = codeContainer.querySelector('.lntd:last-child code');
 if (codeTableCell) {
 codeText = codeTableCell.textContent || codeTableCell.innerText;
 } else {
 
 const codeElement = codeContainer.querySelector('code');
 if (codeElement) {
 
 const hasInlineLineNumbers = codeElement.querySelector('.ln');
 if (hasInlineLineNumbers) {
 
 const codeLines = codeElement.querySelectorAll('.cl');
 if (codeLines.length > 0) {
 codeText = Array.from(codeLines)
 .map(line => {
 const text = line.textContent || line.innerText;
 
 return text.replace(/\n+$/, '');
 })
 .join('\n')
 .replace(/\n+$/, ''); 
 } else {
 
 const allText = codeElement.textContent || codeElement.innerText;
 codeText = allText.replace(/^\d+/gm, '').replace(/^\s+/gm, '');
 }
 } else {
 
 codeText = codeElement.textContent || codeElement.innerText;
 }
 } else {
 
 codeText = codeContainer.textContent || codeContainer.innerText;
 }
 }

 
 codeText = codeText.trim();

 
 await navigator.clipboard.writeText(codeText);

 
 copyIcon.innerHTML = `\n \u003csvg class=\u0022h-3 w-3\u0022\n fill=\u0022none\u0022\n stroke=\u0022currentColor\u0022\n viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\n\u003c\/svg\u003e`;
 if (copyText) {
 copyText.textContent = '복사됨';
 }
 copyBtn.classList.add('text-green-600');

 
 setTimeout(() => {
 copyIcon.innerHTML = `\n \u003csvg class=\u0022h-3 w-3\u0022\n fill=\u0022none\u0022\n stroke=\u0022currentColor\u0022\n viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\n\u003c\/svg\u003e`;
 if (copyText) {
 copyText.textContent = '복사';
 }
 copyBtn.classList.remove('text-green-600');
 }, 2000);

 } catch (err) {
 console.error('复制失败:', err);

 
 const range = document.createRange();
 const codeElement = codeContainer.querySelector('code') || codeContainer;
 range.selectNodeContents(codeElement);
 const selection = window.getSelection();
 selection.removeAllRanges();
 selection.addRange(range);

 
 if (copyText) {
 copyText.textContent = '선택됨';
 }

 setTimeout(() => {
 if (copyText) {
 copyText.textContent = '복사';
 }
 selection.removeAllRanges();
 }, 2000);
 }
 });
 }

 
 if (collapseBtn) {
 const collapseIcon = collapseBtn.querySelector('.collapse-icon');
 const collapseText = collapseBtn.querySelector('.collapse-text');
 const collapseOverlay = codeContainer.querySelector('.collapse-overlay');

 
 let codeElement = codeContainer.querySelector('pre.chroma');
 if (!codeElement) {
 codeElement = codeContainer.querySelector('pre');
 }

 const defaultState = collapseBtn.dataset.defaultState || 'expanded';
 const isCollapsedAttr = collapseBtn.dataset.collapsed === 'true';
 const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;
 const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;
 const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;

 let isCollapsed = false;

 
 function initCollapse() {
 
 const shouldCollapse = isCollapsedAttr ||
 defaultState === 'collapsed' ||
 shouldAutoCollapse();

 if (shouldCollapse) {
 setCollapsed(true, false); 
 }
 }

 function shouldAutoCollapse() {
 
 if (codeElement) {
 const lines = codeElement.querySelectorAll('.line, .cl');
 const height = codeElement.offsetHeight;
 return lines.length > autoCollapseLines || height > autoCollapseHeight;
 }

 
 const containerHeight = codeContainer.offsetHeight;
 if (containerHeight > autoCollapseHeight) {
 return true;
 }

 
 const textContent = codeContainer.textContent || codeContainer.innerText || '';
 const estimatedLines = textContent.split('\n').length;
 return estimatedLines > autoCollapseLines;
 }

 function setCollapsed(collapsed, animate = true) {
 if (!collapseOverlay) return;

 isCollapsed = collapsed;

 if (collapsed) {
 
 codeContainer.style.maxHeight = collapsedHeight + 'px';
 codeContainer.style.overflow = 'hidden';
 collapseOverlay.style.opacity = '1';
 collapseOverlay.style.pointerEvents = 'auto';

 
 collapseIcon.innerHTML = `\n \u003csvg class=\u0022h-3 w-3\u0022\n fill=\u0022none\u0022\n stroke=\u0022currentColor\u0022\n viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\n\u003c\/svg\u003e`;
 if (collapseText) {
 collapseText.textContent = '펼치기';
 }
 collapseBtn.title = '펼치기';

 } else {
 
 codeContainer.style.maxHeight = '';
 codeContainer.style.overflow = '';
 collapseOverlay.style.opacity = '0';
 collapseOverlay.style.pointerEvents = 'none';

 
 collapseIcon.innerHTML = `\n \u003csvg class=\u0022h-3 w-3\u0022\n fill=\u0022none\u0022\n stroke=\u0022currentColor\u0022\n viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;
 if (collapseText) {
 collapseText.textContent = '접기';
 }
 collapseBtn.title = '접기';
 }

 
 if (animate) {
 codeContainer.style.transition = 'max-height 0.3s ease-out';
 setTimeout(() => {
 codeContainer.style.transition = '';
 }, 300);
 }
 }

 function toggleCollapse() {
 setCollapsed(!isCollapsed, true);
 }

 
 collapseBtn.addEventListener('click', toggleCollapse);

 
 if (collapseOverlay) {
 collapseOverlay.addEventListener('click', () => {
 if (isCollapsed) {
 setCollapsed(false, true);
 }
 });
 }

 
 initCollapse();
 }
})();
&lt;/script>
&lt;p>특히 여기서 &lt;code>&amp;amp;&lt;/code>에 주목해주세요. 이것이 적절할까요? 우리는 무엇을 확인해야 할까요? 어떤 문제가 발생할 수 있을까요? 많은 C++ 프로그래머들이 참조에 대해 완전히 이해하지 못한 상태에서 &amp;ldquo;복사를 피한다&amp;quot;고만 알고 있는 경우가 많습니다. 하지만 C++의 대부분의 문제처럼, 이 문제도 더 복잡합니다.&lt;/p></description></item><item><title>Abseil Tip 107 참조 수명 연장</title><link>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow107/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow107/</guid><description>&lt;p>아래는 &amp;ldquo;이번 주의 팁 #107: 참조 수명 확장&amp;quot;에 대한 한글 번역입니다:&lt;/p>
&lt;hr>
&lt;p>&lt;strong>제목:&lt;/strong> &amp;ldquo;이번 주의 팁 #107: 참조 수명 확장&amp;rdquo;&lt;br>
&lt;strong>원문 게시일:&lt;/strong> 2015년 12월 10일&lt;br>
&lt;strong>작성자:&lt;/strong> Titus Winters (&lt;a href="mailto:titus@google.com">titus@google.com&lt;/a>)&lt;/p></description></item><item><title>Abseil Tip 135 계약을 테스트하라, 구현을 테스트하지 마라</title><link>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow135/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-18-paper-tow135/</guid><description>&lt;h1 id="주간-팁-135-계약을-테스트하라-구현을-테스트하지-마라">주간 팁 #135: 계약을 테스트하라, 구현을 테스트하지 마라&lt;/h1>
&lt;p>&lt;strong>Originally posted as TotW #135 on June 5, 2017&lt;/strong>&lt;br>
&lt;em>By &lt;a href="mailto:jdennett@google.com">James Dennett&lt;/a>&lt;/em>&lt;br>
Updated 2020-04-06&lt;/p>
&lt;p>&lt;strong>&amp;ldquo;진정한 친구가 한 명이라도 있다면, 당신은 이미 많은 것을 가진 것이다.&amp;rdquo; — 토마스 풀러(Thomas Fuller)&lt;/strong>&lt;/p></description></item><item><title>Abseil Tip 64 Raw 문자열 리터럴</title><link>https://jaehun.me/ko/ko/posts/2024-11-14-tow64/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-14-tow64/</guid><description>&lt;hr>
&lt;h2 id="order-064">title: &amp;ldquo;이번 주의 팁 #64: Raw 문자열 리터럴&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/64
type: markdown
order: &amp;ldquo;064&amp;rdquo;&lt;/h2>
&lt;p>원래 totw/64로 2013-12-09에 게시됨&lt;/p>
&lt;p>&lt;em>작성자: Titus Winters &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>2017-10-23 업데이트&lt;/p></description></item><item><title>Abseil Tip 77 임시 객체, 이동, 복사</title><link>https://jaehun.me/ko/ko/posts/2024-11-14-tow77/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-14-tow77/</guid><description>&lt;h2 id="order-077">title: &amp;ldquo;이번 주의 팁 #77: 임시 객체, 이동, 복사&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/77
type: markdown
order: &amp;ldquo;077&amp;rdquo;&lt;/h2>
&lt;p>원래 totw/77로 2014-07-09에 게시됨&lt;/p>
&lt;p>&lt;em>작성자: Titus Winters &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Abseil Tip 86 클래스(enum class)를 활용한 열거형</title><link>https://jaehun.me/ko/ko/posts/2024-11-14-tow86/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-14-tow86/</guid><description>&lt;hr>
&lt;h2 id="order-086">title: &amp;ldquo;이번 주의 팁 #86: 클래스(enum class)를 활용한 열거형&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/86
type: markdown
order: &amp;ldquo;086&amp;rdquo;&lt;/h2>
&lt;p>원래 totw/86로 2015-01-05에 게시됨&lt;/p></description></item><item><title>Abseil Tip 122 테스트 픽스처, 명확성, 그리고 데이터 흐름</title><link>https://jaehun.me/ko/ko/posts/2024-11-13-tow122/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-13-tow122/</guid><description>&lt;hr>
&lt;h2 id="order-122">title: &amp;ldquo;이번 주의 팁 #122: 테스트 픽스처, 명확성, 그리고 데이터 흐름&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/122
type: markdown
order: &amp;ldquo;122&amp;rdquo;&lt;/h2>
&lt;p>원래 totw/122로 2016-08-30에 게시됨&lt;/p></description></item><item><title>Abseil Tip 55 이름 개수 세기와 unique_ptr</title><link>https://jaehun.me/ko/ko/posts/2024-11-13-tow55/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-13-tow55/</guid><description>&lt;hr>
&lt;h2 id="order-055">title: &amp;ldquo;이번 주의 팁 #55: 이름 개수 세기와 &lt;code>unique_ptr&lt;/code>&amp;rdquo;
layout: tips
sidenav: side-nav-tips.html
published: true
permalink: tips/55
type: markdown
order: &amp;ldquo;055&amp;rdquo;&lt;/h2>
&lt;p>원래 totw/55로 2013-09-12에 게시됨&lt;/p>
&lt;p>&lt;em>작성자: Titus Winters &lt;a href="mailto:titus@google.com">(titus@google.com)&lt;/a>&lt;/em>&lt;/p>
&lt;p>2017-10-20 업데이트됨&lt;/p>
&lt;p>빠른 링크: &lt;a href="https://abseil.io/tips/55">abseil.io/tips/55&lt;/a>&lt;/p></description></item><item><title>Abseil Tip 1 string_view의 활용 방법과 이점</title><link>https://jaehun.me/ko/ko/posts/2024-11-12-tow1/</link><pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate><guid>https://jaehun.me/ko/ko/posts/2024-11-12-tow1/</guid><description>&lt;h3 id="abseil-tip-1">&lt;strong>Abseil Tip #1: &lt;code>string_view&lt;/code>의 활용 방법과 이점&lt;/strong>&lt;/h3>
&lt;h4 id="string_view">&lt;strong>&lt;code>string_view&lt;/code>란 무엇이고, 왜 중요한가?&lt;/strong>&lt;/h4>
&lt;p>C++에서 문자열을 인자로 받는 함수를 작성할 때, 주로 다음 세 가지 방식 중 하나를 사용합니다:&lt;/p></description></item></channel></rss>